/**
    THIS IS THE UPDATED FIREBASE SCHEMA.
    NOTE:
        "NEW": THIS MEANS THAT THE ATTRIBUTE IS NOT IMPLEMENTED YET. IT IS ONLY PLANNED FOR NOW.
        "CHANGE": THIS MEANS THAT THE ATTRIBUTE IS TO BE CHANGED, BUT THE CHANGES ARE NOT YET IMPLEMENTED.
*/
{
    "accounts": {
        "email@gmail__DOT__com": {
            // Email is converted into a firebase-safe key.
            "lastOnline": 123456,
            // Epoch millis.
            "password": "hashedPassword",
            "player": [
                0,
                1,
                2
            ],
            // List of player Ids.
            "username": "username"
        }
    },
    "appData": {
        "About": "Lorem Ipsum",
        "TermsAndConditions": "Lorem Ipsum"
    },
    "player": [
        {
            "accountId": "email@gmail.com",
            "exp": 0,
            "inventory": {
                "resourceId": {
                    "resourceId": 0,
                    "type": "COLLECTIBLE | EDIBLE | RESOURCE | GAME MECHANICS",
                    "quantity": 0,
                    "sellable": false
                }
            },
            "money": 2000,
            "server": "0",
            "quizScores": {
                "0": 10
            },
            "objectives": 0,
            "storyQueue": [
                {
                    "variableHolder": {
                        "variableName": "value"
                    },
                    "currentLineGroup": 0,
                    "nextLineGroup": 1,
                    "currentScene": 0,
                    "nextScene": 1,
                    "story": 0,
                    // This is chapter
                    "trigger": 0
                    // this is the next quest if this story finishes.
                }
            ],
            "storyHistory": [
                {
                    "variableHolder": {
                        "variableName": "value"
                    },
                    "currentLineGroup": 0,
                    "nextLineGroup": 1,
                    "currentScene": 0,
                    "nextScene": 1,
                    "story": 0
                    // This is chapter
                }
            ],
            "taskQueue": {
                "lastUpdate": 123456,
                "tasks": [
                    {
                        "taskId": 0,
                        "taskNote": "",
                        "done": false
                    }
                ]
            },
            "market": {
                "id": 0,
                // market Id connected to the server.
                "hadMarket": true
            },
            "factory": {
                // factory details for chapter 4.
                "factoryType": "FOOD | MANUFACTURING",
                "factoryMarketId": 0,
                "details": {
                    "energy": 150,
                    // this is the amount of taps the player can do.
                    "energyMax": 150,
                    // this is the maximum amount of taps the player can do.
                    "lastUsedEnergy": 1123456,
                    // this is the timestamp when the user last used their energy. Used to generate more energy.
                    "onProduction": 1,
                    // resource id
                    "foodProficiency": 100,
                    // proficiency is the player's experience in the factory type.
                    "manufacturingProficiency": 0,
                    "multiplier": 1
                    // NEW: multiplies the added resource
                }
            }
        }
    ],
    "resource": [
        {
            "resourceId": 0,
            "name": "Resource Name",
            "description": "Lorem Ipsum",
            "type": "COLLECTIBLE | EDIBLE | RESOURCE | GAME MECHANICS",
            // This only has four possible values.
            "sellable": false,
            "factoryDefaults": {
                "proficiencyRequirement": 100,
                "proficiencyReward": 1
                // This is the amount of added proficiency when generating this.
            }
        }
    ],
    "server": {
        "serverId": {
            "image": "src",
            "name": "Server Name",
            "players": [
                0,
                1
            ],
            // List of playerIds.
            "settings": {
                "playerLimit": 30,
                // NEW: key change from "player_limit" to "playerLimit".
                "marketNameDisplayed": false
                // NEW: indicator of whether or not the player name is displayed in their market.
            },
            "market": {
                // NEW: This holds the market data.
                "marketStandard": {
                    "marketPrice": {
                        "resourceId": {
                            "resourceId": 0,
                            "marketPrice": 100,
                            "metadata": {
                                // NEW
                                "demand": {
                                    "hour1": 10,
                                    "hour24": 1200
                                },
                                "supply": 10200
                            }
                        }
                    },
                    "metadata": {
                        // NEW
                        "totalWeightedPrice": 10200,
                        "inflationRate": 0.25,
                        "purchasingPower": 0.25,
                        "updateTime": "YYYYMMDD;HH"
                    }
                },
                "marketHistory": {
                    // NEW
                    "demand": {
                        "resourceId": {
                            "YYYYMMDD;HH": 10
                        }
                    },
                    "totalWeightedPrice": {
                        "YYYYMMDD;HH": 10200
                    }
                },
                "playerMarkets": [
                    // putting this in the server will make them easily accessible to a bunch of players.
                    {
                        "marketOwner": 0,
                        // playerId ["-1" if managed by bot.]
                        "marketId": 0,
                        "storeName": "Store Name",
                        "opened": 123456,
                        // epoch millis
                        "onSale": [
                            // list of what's being sold
                            {
                                "onSaleId": 0,
                                "resourceId": 0,
                                "itemName": "Resource Name",
                                "type": "COLLECTIBLE | EDIBLE | RESOURCE | GAME MECHANICS",
                                "price": 105,
                                "quantity": 10,
                                "inventoryReference": 0
                                // CHANGE: remove this. replace with the "resourceId" for the code.
                            }
                        ]
                    }
                ],
                "playerFactory": [
                    {
                        "factoryOwner": 0,
                        // playerId ["-1" if managed by bot.]
                        "factoryId": 0,
                        "factoryName": "Factory Name",
                        "factoryType": "Food Factory",
                        // NEW: .
                        "opened": 123456,
                        // epoch millis
                        "onSale": [
                            // list of what's being sold
                            {
                                "onSaleId": 0,
                                "resourceId": 0,
                                "itemName": "Resource Name",
                                "type": "COLLECTIBLE | EDIBLE | RESOURCE | GAME MECHANICS",
                                "price": 105,
                                "quantity": 10,
                                "inventoryReference": 0
                                // CHANGE: remove this. replace with the "resourceId" for the code.
                            }
                        ]
                    }
                ]
            },
            "otherDetails": {
                "reachedLevels": {
                    "lvl1": 10,
                    "lvl2": 4,
                    "lvl3": 1,
                    "lvl4": 0
                },
                "bots": {
                    "store": true,
                    "factory": false
                }
            },
            "onlinePlayers": [
                0,
                1
            ],
            "updaterPlayer": 0,
            "diagnostic_tests" : {
                "pre_test_scores": {
                    "0": 10
                },
                "post_test_scores": {
                    "0": 20
                }
            }
            // player assigned to update the server data.
        }
    }
}